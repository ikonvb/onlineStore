#setup for local
spring.datasource.url=jdbc:postgresql://localhost:5432/onlinestore
spring.datasource.username=postgres
spring.datasource.password=cisco

cloud_name=${cloudinaryCloudName}
api_key=${cloudinaryApiKey}
api_secret=${cloudinaryApiSecret}


#setup for amazon
#spring.datasource.url=jdbc:postgres://mbdquuihxvrqzq:4d8c6f75015ec55b181b87b4dcdb12bca83f9d5c1b2bf75a7bb6e45cdd6552c9@ec2-54-74-156-137.eu-west-1.compute.amazonaws.com:5432/d71pf7tpjb628l
#spring.datasource.username=mbdquuihxvrqzq
#spring.datasource.password=4d8c6f75015ec55b181b87b4dcdb12bca83f9d5c1b2bf75a7bb6e45cdd6552c9
#setup for heroku
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.maxActive=10
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true
#spring.servlet.multipart.max-file-size=-1
#spring.servlet.multipart.max-request-size=-1
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect
#
#server.port=${PORT:5000}